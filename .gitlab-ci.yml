stages:
  - dockerbuild
  - gkedeploy

docker build webapp:
  stage: dockerbuild
  image: docker:stable
  services:
    - docker:dind
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/african-names/back/african-names/africannames-webapp:${CI_COMMIT_SHORT_SHA}

  before_script:
    - docker info
    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} ${CI_REGISTRY}/african-names/back/african-names/africannames-webapp:latest
    - docker push ${CONTAINER_IMAGE}
  after_script:
    - docker logout ${CI_REGISTRY}

docker build frontend:
  stage: dockerbuild
  image: docker:stable
  services:
    - docker:dind
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/african-names/back/african-names/africannames-front:${CI_COMMIT_SHORT_SHA}

  before_script:
    - docker info
    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - ls
    - cd src/main/frontend
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} ${CI_REGISTRY}/african-names/back/african-names/africannames-front:latest
    - docker push ${CONTAINER_IMAGE}
  after_script:
    - docker logout ${CI_REGISTRY}

gcloud deploy:
  stage: gkedeploy
  image: google/cloud-sdk
  script:
    - base64 -d $GCP_SERVICE_ACCOUNT_KEY > ~/encoded_serviceaccount.json
    - gcloud auth activate-service-account --key-file ~/encoded_serviceaccount.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud config set compute/zone us-central1-a
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME
    - kubectl apply -f ./k8/