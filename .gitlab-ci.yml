image: docker:latest
services:
  - docker:dind

stages:
  - build
  - package
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build:
  tags:
    - dev
  image: gradle:6.8.3-jdk11-openj9
  stage: build
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/*.jar
  only:
    - dev

package:
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    REPOSITORY: $CI_REGISTRY/african-names/back/african-names
  stage: package
  image: azul/zulu-openjdk:11.0.10
  services:
    - docker:dind
  script:
    - apt-get update
    - apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - apt-get update -y
    - apt-get install -y docker-ce
    - service docker start
    - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build --pull -t $REPOSITORY:latest .
    - docker push $REPOSITORY:latest
    - docker push $REPOSITORY
  only:
    - dev

deploy_staging:
  tags:
    - dev
  stage: deploy
  variables:
    DOCKER_HOST: ssh://tooflex@tooflex.freeboxos.fr:8082
        
  before_script:
    # Add ENV variables
    - export ENV=dev
    - export AFN_POSTGRES_USER=$AFN_POSTGRES_USER
    - export AFN_POSTGRES_PASSWORD=$AFN_POSTGRES_PASSWORD
    - export AFN_POSTGRES_DB=$AFN_POSTGRES_DB
    - export AFN_POSTGRES_HOST=$AFN_POSTGRES_HOST
    - export AFN_POSTGRES_PORT=$AFN_POSTGRES_PORT
    - export AFN_APP_USER=$AFN_APP_USER
    - export AFN_APP_PASSWORD=$AFN_APP_PASSWORD
    - export AFN_ENV=$AFN_ENV

    # Configure SSH
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "${SSH_DEV_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    # Configure Docker
    - apk add docker-compose
    - echo "$CI_JOB_TOKEN" | docker login --username gitlab-ci-token --password-stdin $CI_REGISTRY

  script:
    - docker-compose pull
    - docker-compose --verbose up -d --force-recreate
  after_script:
    - docker logout registry.gitlab.com
  environment: dev
  only:
    - dev

deploy_prod:
  stage: deploy
  image: google/cloud-sdk
  services:
      - docker:dind
  script:
      - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
      - gcloud auth activate-service-account --key-file gcloud-service-key.json
      - gcloud config set project $GCP_PROJECT_ID
      - gcloud builds submit . --config=cloudbuild.yml
  only:
    - master
